name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    # Python & dependency installation
    - uses: actions/checkout@v2
    - name: setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # - name: install Poetry
    #   uses: snok/install-poetry@v1.1.1
    # - name: cache Poetry virtualenv
    #   uses: actions/cache@v2
    #   id: cache
    #   with:
    #     path: ~/.virtualenvs/
    #     key: poetry-${{ hashFiles('**/poetry.lock') }}
    #     restore-keys: |
    #       poetry-${{ hashFiles('**/poetry.lock') }}
    # - name: set poetry config path
    #   run: poetry config virtualenvs.path ~/.virtualenvs
    - name: install dependencies
      run: pip install -e .
      # if: steps.cache.outputs.cache-hit != 'true'
     
    # - name: lint with mypy
    #   run: poetry run mypy --disallow-untyped-defs rrl.py
    - name: lint with flake8
      run: flake8 . --show-source --statistics --ignore=E203,E501
    - name: pytest
      run: pytest
